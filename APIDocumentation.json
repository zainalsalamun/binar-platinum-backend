{
  "openapi": "3.0.0",
  "info": {
    "title": "API Documentation",
    "version": "1.0.0",
    "description": "Documentation of API endpoints for BinAr Challenge Gold"
  },
  "servers": [
    {
      "url": "http://localhost:3002"
    }
  ],
  "paths": {
    "/auth": {
      "post": {
        "summary": "Authenticate user",
        "description": "Send POST request with email and password to this endpoint to get a JWT",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Email of the user"
                  },
                  "password": {
                    "type": "string",
                    "description": "Password of the user"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful authentication",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "JWT for authenticated user"
                    }
                  },
                  "required": [
                    "token"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get all users",
        "description": "Send GET request to this endpoint to get a list of all users",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "description": "Send POST request to this endpoint to create a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful creation of new user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get a specific user by id",
        "description": "Send GET request to this endpoint to get a specific user by their id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to be retrieved",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "User with specified id not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Update a specific user by id",
        "description": "Send PUT request to this endpoint to update a specific user by their id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to be updated",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update of user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "User with specified id not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a specific user by id",
        "description": "Send DELETE request to this endpoint to delete a specific user by their id",
        "responses": {
          "204": {
            "description": "Successful deletion of user"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "User with specified id not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the user"
          },
          "name": {
            "type": "string",
            "description": "Name of the user"
          },
          "email": {
            "type": "string",
            "description": "Email of the user"
          },
          "password": {
            "type": "string",
            "description": "Password of the user"
          },
          "photo": {
            "type": "string",
            "description": "URL of the user's photo"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "password",
          "photo"
        ]
      },
      "UserCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the user"
          },
          "email": {
            "type": "string",
            "description": "Email of the user"
          },
          "password": {
            "type": "string",
            "description": "Password of the user"
          },
          "photo": { 
            "type": "string",
            "description": "URL of the user's photo"
          } 
        },
        "required": [
          "name",
          "email",
          "password",
          "photo"
        ]
      },
      "UserUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the user"
          },
          "email": {
            "type": "string",
            "description": "Email of the user"
          },
          "password": {
            "type": "string",
            "description": "Password of the user"
          },
          "photo": { 
            "type": "string",
            "description": "URL of the user's photo"
          } 
        },
        "required": [
          "name",
          "email",
          "password",
          "photo"
        ]
      }
    }
  }
}


